" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" Neovim defaults for Vim
set autoindent
set autoread
set backspace=indent,eol,start
set complete-=i
set display=lastline
set encoding=utf-8
set formatoptions=tcqj
set history=10000
set hlsearch
set incsearch
set langnoremap
set laststatus=2
set listchars=tab:>\ ,trail:-,nbsp:+
set mouse=a
set nrformats=hex
set sessionoptions-=options
set smarttab
set tabpagemax=50
set tags=./tags;,tags
set ttyfast
set viminfo+=!
set wildmenu

" Switch syntax highlighting on
syntax enable

" Disable search highlighting
set nohlsearch

" Smart case searching
set ignorecase
set smartcase

" Pathogen
execute pathogen#infect()

colorscheme minimalist

" Solarized Colors
" set t_Co=256
" let g:solarized_termcolors=256
" set background=dark
" colorscheme solarized

" Molokai Colors
" set t_Co=256
" set background=dark
" let g:molokai_original=1
" let g:rehash256=1
" colorscheme molokai

" Enable file type detection and do language-dependent indenting.
filetype plugin indent on

" Show relative line numbers
set number
set relativenumber

" Allow hidden buffers, don't limit to 1 file per window/split
set hidden

" Spaces instead of tabs
set expandtab

" Airline
let g:airline_theme="papercolor"
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

" Leader
let mapleader="\<Space>"

" Natural splitting
set splitbelow
set splitright
nnoremap <leader>j <C-W><C-J>
nnoremap <leader>k <C-W><C-K>
nnoremap <leader>l <C-W><C-L>
nnoremap <leader>h <C-W><C-H>
cabbrev split vsplit
cabbrev hsplit split

" Buffer management
nnoremap <leader>[ :bp<CR>
nnoremap <leader>] :bn<CR>
nnoremap <leader>x :bd<CR>

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" CtrlP
let g:ctrlp_map = "<leader>p"
let g:ctrlp_cmd = "CtrlP"
let g:ctrlp_working_path_mode = "ra"
let g:ctrlp_user_command = [".git", "cd %s && git ls-files -co --exclude-standard"]

" NERDTree
map <leader>\ :NERDTreeToggle<CR>
